services:
  database:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - test-strongtypedids
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  api:
    image: api
    build: 
      context: .
      dockerfile: DockerfileAPI
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      Database__Host: database
      Database__Database: test-stronglytypedids
      Database__Username: ${DATABASE_USERNAME}
      Database__Password: ${DATABASE_PASSWORD}
    networks:
      - test-strongtypedids
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
  

volumes:
  postgres-data:
    driver: local

networks:
  test-strongtypedids:
    driver: bridge